group 'ar.edu.unrc'
version '1.0.0'

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}

//https://docs.gradle.org/current/userguide/standard_plugins.html
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'application' //https://docs.gradle.org/current/userguide/application_plugin.html
apply plugin: 'distribution'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
}

dependencies {
    compile group: 'org.jetbrains', name: 'annotations', version: '15.0'
    compile group: 'ar.edu.unrc', name: 'coeus', version: '1.0.0'
    compile group: 'org.encog', name: 'encog-core', version: '3.3.0'
    compile group: 'org.apache.poi', name: 'poi', version: '3.11'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.11'
    compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.11'
    compile group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '2.6.0'
    compile group: 'stax', name: 'stax-api', version: '1.0.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://clojars.org/repo/" }
    }
}

mainClassName = "ar.edu.unrc.game2048.Game2048"

//create a single Jar with all dependencies
task finalFatJar(type: Jar) {
    manifest {
        attributes ('Implementation-Title': rootProject.name,
                'Application-Name': 'Game 2048',
                'Implementation-Version': version,
                'Built-By': 'Lucia Bressan, Renzo Bianchini, Franco Gast√≥n Pellegrini',
                'Built-Date': new Date(),
                'Built-Java': System.getProperty('java.version'),
                'Main-Class': mainClassName,
                'Sealed': 'true')
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

configure(finalFatJar) {
    group = 'distribution'
    description = 'Create a big Jar with all dependency'
}
